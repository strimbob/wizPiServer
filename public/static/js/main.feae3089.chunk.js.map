{"version":3,"sources":["redux/constants/localStorage.js","auth/index.js","components/1-atom/Input.js","components/4-pages/LoginPage.js","redux/2-action/api/httpConstants.js","redux/2-action/api/httpUtils.js","redux/2-action/api/StompApi.js","components/4-pages/main.js","redux/2-action/midi.js","redux/constants/actionConstants.js","redux/shape/midiData.js","redux/3-reducer/index.js","redux/3-reducer/midi_red.js","redux/1-store/index.js","reportWebVitals.js","components/1-atom/LogOut.js","router/AuthRedirect.js","router/LazyLoad.js","router/app-root.js","components/1-atom/Spinner.js","router/routes.js","index.js"],"names":["LOCALSTORAGE_AUTH_TOKEN","LOCALSTORAGE_PROJECT","LOCAL_STORAGE_ACCESS_TOKEN","AuthService","domain","setToken","token","localStorage","setItem","resetPassword","username","Promise","resolve","reject","auth","changePassword","connection","getRealm","email","err","response","console","error","description","log","login","password","loginParameters","realm","authClient","authResult","accessToken","handleAuthResult","tenants","getTenants","length","setTenant","isAuthenticated","decodedToken","decode","getItem","exp","Date","now","e","tenantSelected","hasOwnProperty","a","tenant","getTenant","this","auth0_","auth0","WebAuth","clientID","audience","scope","responseType","client","InputTextBox","props","id","_key","disable","value","onClick","onChange","className","placeholder","onKeyPress","undefined","_ref","isUpdating","didUpdateFail","errorMessage","type","ref","disabled","onBlur","event","autoComplete","Auth","loginConstant","LoginPage","useState","name","setName","setPassword","seterror","history","useHistory","eventHandler","currentTarget","push","Input","Method","GET","POST","PUT","DELETE","HEAD","ContentType","Accept","methodsString","Object","keys","reduce","acc","replace","url","fetchObject","isOk","status","handleErrorResponse","Error","handleError","message","fetchResponse","options","body","method","contentType","JSON","stringify","authToken","combinedOptions","headers","Authorization","fetch","json","trace","environment","_getSingle","objectType","query","project","host","getBaseUrl","ObjectAPI","createGetSingle","search","midi","connect","state","dispatch","useEffect","getState","StompApi","events","midiFile","ActionConstants","Midi","Record","track","autoSugget","combineReducers","MidiData","action","middlewares","thunk","createStore","reducer","applyMiddleware","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","clear","to","authService","Component","AppRoot","renderRoutes","route","routes","Spinner","color","MainTwo","lazy","component","path","exact","LogOut","Login","fallback","setAuthenticated","useDispatch","AuthRedirect","main","ReactDOM","render","StrictMode","store","basename","process","Routes","document","getElementById"],"mappings":"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","file":"static/js/main.feae3089.chunk.js","sourcesContent":["export const LOCALSTORAGE_AUTH_TOKEN = 'token';\nexport const LOCALSTORAGE_PROJECT = 'project';\n","import auth0 from 'auth0-js';\nimport decode from 'jwt-decode';\n// import api from '../redux/2_action/api';\nconst LOCAL_STORAGE_ACCESS_TOKEN = 'token';\n\nexport default class AuthService {\n  constructor(domain) {\n    this.domain = domain || 'http://localhost:8080';\n    const auth0_ = new auth0.WebAuth({\n      clientID: 'Sdvn7VM9NdXOlbZqiOjQuhsAe48nnlNu',\n      domain: 'solidcake.eu.auth0.com',\n      audience: 'https://solidcake.eu.auth0.com/api/v2/',\n      scope: 'openid profile',\n      responseType: 'token id_token',\n    });\n    this.authClient = auth0_.client;\n    this.auth = auth0_;\n    this.tenant = null;\n  }\n\n  setToken = (token) => {\n    localStorage.setItem(LOCAL_STORAGE_ACCESS_TOKEN, token);\n  };\n\n  resetPassword = (username) => {\n    return new Promise((resolve, reject) => {\n      this.auth.changePassword(\n        { connection: this.getRealm(), email: username },\n        (err, response) => {\n          if (err) {\n            console.error('error', err);\n            reject(`Error: ${err.description}`);\n          }\n          if (response) {\n            console.log('error', response);\n            resolve(response);\n          }\n        }\n      );\n    });\n  };\n  getRealm = () => {\n    let realm = 'Username-Password-Authentication';\n    return realm;\n  };\n  login = (username, password) => {\n    let realm = this.getRealm();\n    const loginParameters = {\n      username: username,\n      password: password,\n      realm,\n    };\n\n    return new Promise((resolve, reject) => {\n      this.authClient.login(loginParameters, (err, authResult) => {\n        if (err) {\n          reject(err);\n        }\n        if (authResult && authResult.accessToken) {\n          this.handleAuthResult(resolve, authResult);\n        }\n      });\n    });\n  };\n\n  handleAuthResult = (resolve, authResult) => {\n    console.log('logged in!', authResult);\n    this.setToken(authResult.accessToken);\n    const tenants = this.getTenants();\n    if (tenants.length === 1) {\n      this.setTenant(tenants[0]);\n    }\n    resolve(tenants);\n  };\n\n  isAuthenticated = () => {\n    try {\n      const decodedToken = decode(\n        localStorage.getItem(LOCAL_STORAGE_ACCESS_TOKEN)\n      );\n      return !!decodedToken && decodedToken.exp > Date.now() / 1000;\n    } catch (e) {\n      console.log('get new token');\n      return false;\n    }\n  };\n\n  tenantSelected = () => {\n    try {\n      return localStorage.hasOwnProperty('tenant');\n    } catch (e) {\n      console.error(e);\n      return false;\n    }\n  };\n\n  getTenants = async () => {\n    // try {\n    //   const userInfo = await api.userInfo.GET();\n    //   return userInfo.applicationMetadata.tenants;\n    // } catch (e) {\n    //   console.error(e);\n    //   return [];\n    // }\n  };\n\n  setTenant = (tenant) => {\n    this.tenant = tenant;\n    localStorage.setItem('tenant', tenant);\n  };\n\n  getTenant = () => {\n    try {\n      return this.tenant || localStorage.getItem('tenant');\n    } catch (e) {\n      return null;\n    }\n  };\n}\n","import React, { Fragment } from 'react';\n\nconst InputTextBox = (props) => {\n  const {\n    id,\n    _key,\n    disable,\n    value,\n    onClick,\n    onChange,\n    className = '',\n    placeholder = '',\n    onKeyPress = undefined,\n    _ref = null,\n    isUpdating = false,\n    didUpdateFail = false,\n    errorMessage,\n    type = 'text',\n  } = props;\n\n  return (\n    <Fragment>\n      <input\n        ref={_ref}\n        id={id}\n        key={`SD-textKey__${_key}`}\n        className={`SD-InputText ${className} ${\n          isUpdating ? 'updating' : ''\n        } ${didUpdateFail ? 'failed' : ''}`}\n        placeholder={placeholder}\n        disabled={disable}\n        type={type}\n        value={value ? value : ''}\n        onChange={onChange}\n        onClick={onClick}\n        onBlur={(event) => onChange({ ...event, type: 'onBlur' })}\n        onKeyPress={onKeyPress}\n        autoComplete={'off'}\n      />\n      {errorMessage && (\n        <Fragment>\n          <div className={'SD-Label'}>{`${errorMessage}`}</div>\n        </Fragment>\n      )}\n    </Fragment>\n  );\n};\nexport default InputTextBox;\n","import React, { useState } from 'react';\nimport { LOCALSTORAGE_PROJECT } from '../../redux/constants/localStorage';\nimport { useHistory } from 'react-router-dom';\nimport Input from '../1-atom/Input';\nimport AuthService from '../../auth/index.js';\n\nconst Auth = new AuthService();\nconst loginConstant = {\n  name: 'loginName',\n  password: 'loginPassword',\n  submit: 'loginSubmit',\n};\nconst LoginPage = () => {\n  const [name, setName] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [error, seterror] = useState(null);\n  const history = useHistory();\n  const eventHandler = async (event) => {\n    const { id } = event.currentTarget;\n    switch (id) {\n      case loginConstant.name:\n        setName(event.currentTarget.value);\n        break;\n      case loginConstant.password:\n        setPassword(event.currentTarget.value);\n        break;\n      case loginConstant.submit:\n        try {\n          await Auth.login(name, password);\n\n          localStorage.setItem(LOCALSTORAGE_PROJECT, 'xylophone');\n          history.push('/');\n        } catch (error) {\n          seterror(error.description); //todo need to be string should check\n        }\n        break;\n      default:\n        console.log('id error');\n        break;\n    }\n  };\n\n  return (\n    <div className={'loginPage-wrapper'}>\n      <div className={'login'}>\n        <form>\n          <div className={'login-inputs'}>\n            <div className={'login-title'}>Welcome to stomp </div>\n            <Input\n              id={loginConstant.name}\n              _key={loginConstant.name}\n              value={name}\n              onClick={eventHandler}\n              onChange={eventHandler}\n              className={'login-input'}\n              placeholder={'User Name'}\n              type=\"text\"\n            />\n            <Input\n              id={loginConstant.password}\n              _key={loginConstant.password}\n              value={password}\n              onClick={eventHandler}\n              onChange={eventHandler}\n              className={'login-input'}\n              placeholder={'User Password'}\n              type=\"password\"\n            />\n            {error && <div className={'login-error'}>{error}</div>}\n            <div\n              className={'login-submit'}\n              id={loginConstant.submit}\n              onClick={eventHandler}\n            >\n              login\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginPage;\n","export const Method = {\n  GET: 'GET',\n  POST: 'POST',\n  PUT: 'PUT',\n  DELETE: 'DELETE',\n  HEAD: 'HEAD',\n};\n\nexport const ContentType = {\n  JSON: {\n    Accept: 'application/json',\n    'Content-Type': 'application/json',\n  },\n  Text: {\n    Accept: 'text/plain',\n    'Content-Type': 'text/plain',\n  },\n};\n\nexport const methodsString = Object.keys(Method)\n  .reduce((acc, value) => {\n    return `${acc}, ${value}`;\n  }, '')\n  .replace(',', '');\n","import { Method, methodsString, ContentType } from './httpConstants';\nimport { LOCALSTORAGE_AUTH_TOKEN } from '../../constants/localStorage';\n\nexport function GET(url) {\n  return fetchObject(url, {}, null, Method.GET, ContentType.JSON);\n}\n\nconst isOk = (response) => {\n  return response.status >= 200 && response.status < 300;\n};\n\nconst handleErrorResponse = (response) => {\n  const error = new Error(response);\n  return error;\n};\n\nconst handleError = (e) => {\n  if (!!e && !!e.message) {\n    return new Error(e.message);\n  } else {\n    return new Error('Unknown fetch error');\n  }\n};\n\nasync function fetchResponse(\n  url,\n  options = {},\n  body = null,\n  method = Method.GET,\n  contentType\n) {\n  if (method === Method.POST || method === Method.PUT) {\n    if (body && typeof body !== 'string') {\n      body = JSON.stringify(body);\n    }\n  }\n  let authToken = localStorage.getItem(LOCALSTORAGE_AUTH_TOKEN);\n  authToken = authToken ? authToken : '';\n  const combinedOptions = {\n    method: method,\n    headers: {\n      Authorization: 'Bearer ' + authToken,\n      'Access-Control-Allow-Methods': methodsString,\n      ...contentType,\n    },\n    body: body,\n    ...options,\n  };\n\n  try {\n    const response = await fetch(url, combinedOptions);\n\n    if (isOk(response)) {\n      return response;\n    } else {\n      const message = await response.json();\n      const errorMessage = handleErrorResponse(\n        message.message ? message.message : response.status\n      );\n      throw handleErrorResponse(errorMessage);\n    }\n  } catch (e) {\n    console.trace(e);\n    throw handleError(e);\n  }\n}\n\nasync function fetchObject(\n  url,\n  options = {},\n  body = null,\n  method = Method.GET,\n  contentType\n) {\n  const response = await fetchResponse(\n    url,\n    options,\n    body,\n    method,\n    contentType\n  );\n  const json = await response.json();\n  return await json;\n}\n","import { GET } from './httpUtils';\nimport { LOCALSTORAGE_PROJECT } from '../../constants/localStorage';\n\n// const project = 'xeosdpf';\n// const url = 'http://localhost:5000';\n//'https://vast-tor-87559.herokuapp.com'\nconst environment = {\n  project: () => localStorage.getItem(LOCALSTORAGE_PROJECT),\n  host: () => 'http://localhost:5000',\n};\n\nexport const getBaseUrl = () => {\n  let project = environment.project();\n  let host = environment.host();\n  return `${host}/v1/${project}`;\n};\n\nexport const _getSingle = (objectType, query) => {\n  const url = `${getBaseUrl()}/${objectType}/${query}`;\n  return GET(url);\n};\n\nexport const createGetSingle = (objectType) => {\n  return (query) => _getSingle(objectType, query);\n};\n\nclass ObjectAPI {\n  constructor(objectType) {\n    this.objectType = objectType;\n    this.GET = createGetSingle(objectType);\n  }\n}\n\nclass StompApi {\n  constructor() {\n    this.search = new ObjectAPI('search/midi');\n    this.midi = new ObjectAPI('midi');\n  }\n}\nexport default new StompApi();\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport LoginPage from './LoginPage';\nimport { search } from '../../redux/2-action/midi';\nimport AuthService from '../../auth/index.js';\nconst Auth = new AuthService();\n\nconst handleLogin = async (username, password) => {\n  // try {\n  //   await Auth.login(username, password);\n  //   console.log('loginin!!!!');\n  // } catch (eror) {\n  //   console.log('error');\n  // }\n};\n\nconst Main = ({ midi, dispatch }) => {\n  useEffect(() => {\n    console.log(midi);\n\n    dispatch(search('bill'));\n  }, [midi]);\n\n  return <div>loginedin</div>;\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    midi: state.midi,\n  };\n};\nexport default connect(mapStateToProps)(Main);\n","import StompApi from './api/StompApi';\n\nexport const search = (query) => async (dispatch, getState) => {\n  try {\n    const events = await StompApi.search.GET('bill');\n    console.log(events, 'events');\n    const id = '~midi~lil-nas-x-ft-billy-ray-cyrus~old-town-road-remix';\n    const midiFile = await StompApi.midi.GET(id);\n    console.log('events', 'events', events, midiFile);\n  } catch (error) {\n    console.error(error);\n  }\n};\n","export const ActionConstants = {\n  LOGOUT: 'LOGOUT',\n};\n","import { Record } from 'immutable';\n\nconst defaultState = {\n  track: null,\n  autoSugget: null,\n  url: null,\n};\n\nexport default class Midi extends Record(defaultState) {}\n","import { combineReducers } from 'redux';\nimport { midiReducer } from './midi_red';\n\nexport default combineReducers({\n  midi: midiReducer,\n});\n","import { ActionConstants } from '../constants/actionConstants';\nimport MidiData from '../shape/midiData';\nexport const midiReducer = (state = new MidiData(), action) => {\n  switch (action.type) {\n    case ActionConstants.LOGOUT: {\n      return new MidiData();\n    }\n    default:\n      return state;\n  }\n};\n","import { applyMiddleware, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from '../3-reducer';\n\nlet middlewares = [thunk];\nexport default createStore(reducer, applyMiddleware(...middlewares));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { ActionConstants } from '../../redux/constants/actionConstants';\n\nconst LogOut = ({ dispatch }) => {\n  useEffect(() => {\n    dispatch({ type: ActionConstants.LOGOUT });\n    localStorage.clear();\n  }, []);\n\n  return <Redirect to={'/'} />;\n};\n\nexport default connect()(LogOut);\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport AuthService from '../auth/index.js';\nimport { useDispatch } from 'react-redux';\n\nimport { ActionConstants } from '../redux/constants/actionConstants';\n\nconst authService = new AuthService();\n\nexport default function withAuthenticated({ Component }) {\n  const Authenticated = (props) => {\n    const [isAuthenticated, setAuthenticated] = useState(\n      authService.isAuthenticated()\n    );\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n      if (authService.isAuthenticated()) {\n        console.log('logged in');\n      } else {\n        console.log('logged out');\n        dispatch({ type: ActionConstants.LOGOUT });\n      }\n\n      setAuthenticated(authService.isAuthenticated());\n    }, [authService.isAuthenticated()]);\n\n    if (!isAuthenticated) return <Redirect to={'/login'} />;\n    return (\n      <Fragment>\n        <Component {...props}></Component>\n      </Fragment>\n    );\n  };\n\n  return Authenticated;\n}\n","import React, { Suspense } from 'react';\nimport Spinner from '../components/1-atom/Spinner';\n\nexport const lazyLoad = (Component, props) => () => (\n  <Suspense\n    fallback={\n      <div className={'lazyLoadWrapper'}>\n        <div className={'lazyLoad'}>\n          <Spinner />\n        </div>\n      </div>\n    }\n  >\n    <Component {...props} />\n  </Suspense>\n);\n","import React, { Fragment } from 'react';\nimport { renderRoutes } from 'react-router-config';\nimport Div100vh from 'react-div-100vh';\n\nconst AppRoot = (props) => {\n  return (\n    <Fragment>\n      <Div100vh className={'app-Wrapper'}>\n        {renderRoutes(props.route.routes)}\n      </Div100vh>\n    </Fragment>\n  );\n};\n\nexport default AppRoot;\n","import React from 'react';\nimport Loader from 'react-loader-spinner';\n\nconst Spinner = () => (\n  <div className={'spinner'}>\n    <Loader type=\"Oval\" color=\"#3e96f5\" />\n  </div>\n);\nexport default Spinner;\n","// @flow\nimport { lazy } from 'react';\nimport main from '../components/4-pages/main';\nimport Login from '../components/4-pages/LoginPage';\nimport LogOut from '../components/1-atom/LogOut';\nimport AuthRedirect from './AuthRedirect';\nimport AppRoot from './app-root';\nimport { lazyLoad } from './LazyLoad';\nconst MainTwo = lazy(() => import('../components/4-pages/main'));\n\nconst routes = [\n  {\n    component: AppRoot,\n    routes: [\n      { path: '/clear', exact: true, component: LogOut },\n      { path: '/login', exact: true, component: Login },\n      {\n        path: '/other',\n        exact: true,\n        component: lazyLoad(MainTwo),\n      },\n\n      {\n        path: '/**',\n        exact: true,\n        component: AuthRedirect({ Component: main }),\n      },\n    ],\n  },\n];\n\nexport default routes;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/1-store/';\nimport './components/scss/index.scss';\nimport { BrowserRouter } from 'react-router-dom';\nimport reportWebVitals from './reportWebVitals';\nimport Routes from '../src/router/routes';\nimport { renderRoutes } from 'react-router-config';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        {renderRoutes(Routes)}\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}